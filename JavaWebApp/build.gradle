/**
 * Copyright 2015 wendel fleming
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'jetty'

sourceCompatibility = 1.8
version = '1.0'

// properties
ext {
    springVersion = "4.1.5.RELEASE"
    aspectJVersion = "1.8.5"
    jstlVersion = "1.2"
    log4jVersion = "2.2"
    slf4jVersion = "1.7.10"
    hamcrestVersion = "1.3"
    mockitoVersion = "1.10.19"
    springJPAVersion = "1.8.0.RELEASE"
    hibernateVersion = "3.6.10.Final"
    hibernateJPAVersion = "1.0.0.Final"
    hsqldbVersion = "2.2.9"
    jacksonVersion = "2.5.3"
    commonsLangVersion = "3.3.2"
    elasticsearchVersion = "1.6.0"
    springDataElasticsearch = "1.2.1.RELEASE"
}

repositories {
//    mavenLocal()
    mavenCentral()
}

dependencies {
    // Core Spring Framework
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-beans:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-context-support:$springVersion"

    // Web: Spring MVC
    compile "org.springframework:spring-web:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"

    // AOP: Spring + AspectJ
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.springframework:spring-aspects:$springVersion"
    compile "org.aspectj:aspectjrt:$aspectJVersion"
    compile "org.aspectj:aspectjweaver:$aspectJVersion"

    compile "javax.servlet:jstl:$jstlVersion"

    // ElasticSearch
    compile "org.elasticsearch:elasticsearch:$elasticsearchVersion"
    compile "org.springframework.data:spring-data-elasticsearch:$springDataElasticsearch"


    // Logging
    compile "org.apache.logging.log4j:log4j-api:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-core:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-web:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"

    // Hibernate + JPA + HSQLDB
    compile "org.springframework.data:spring-data-jpa:$springJPAVersion"
    compile "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:$hibernateJPAVersion"
    compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
    compile "org.hsqldb:hsqldb:$hsqldbVersion"

    // Jackson JSON
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"

    // Commons Lang
    compile "org.apache.commons:commons-lang3:$commonsLangVersion"


    // Unit Testing
    testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile('junit:junit:4.+') {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }
//    testCompile group: 'junit', name: 'junit', version: '4.11'

    //include in compile only, exclude in the war - needed for testing though
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'

}


task copyWarAndProp(type: Copy) {
    from war
    from "ext/wowelastic.properties"
    into "../Docker-dir/JavaContainer/"
}


war.archiveName "elasticwow.war"
jettyRunWar.contextPath = 'elasticwow'

jettyRunWar.stopPort = 8090
jettyRunWar.stopKey = 'stopKey'

jettyStop.stopPort = 8090
jettyStop.stopKey = 'stopKey'

jettyRun.stopPort = 8090
jettyRun.stopKey = 'stopKey'
